// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Profile {
  id String @id @default(uuid())
  userId String @unique
  name String
  email String @db.Text
  Lcards Lcard[]
  MindMaps MindMap[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Boxes {
  BOX1
  BOX2
  BOX3
  BOX4
  BOX5
  LEARNED
}

model Lcard {
  id String @id @default(uuid())

  question String
  answer String 
  box Boxes @default(BOX1) 

  profileId String
  profile Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)
 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

 @@index([profileId])

}

model MindMap {
  id String @id @default(uuid())
  name String @default("MindMap")


  profileId String
  profile Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)

  nodes Node[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([profileId])
}

model Node {
  id String @id @default(uuid())
  label String? 
  value String?
  background String @default("#cbd5e1")
  color String  @default("#000000")
  fontSize String @default("2rem")
  xPos Int @default(0)
  yPos Int @default(0)
  type String

  mindMapId String
  mindMap MindMap @relation(fields: [mindMapId], references: [id], onDelete: Cascade)

  edges EdgeToNode[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([mindMapId])
}



// to references the edge Start and End
model EdgeToNode {
  id Int @id @default(autoincrement())

  edgeId Int
  nodeId String 
  edge Edge @relation(fields: [edgeId], references: [id], onDelete: Cascade)
  node Node @relation(fields: [nodeId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([edgeId, nodeId])
}

model Edge {
  id Int @id @default(autoincrement())
  color String @default("#000000")
  nodes EdgeToNode[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
